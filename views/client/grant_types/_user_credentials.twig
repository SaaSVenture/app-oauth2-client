<p>
    The <code>User Credentials</code> grant type is a Two-Legged approach that allows you to
    obtain an <code>Access Token</code> in exchange for a set of end-user credentials.
</p>

<p>
    The OAuth2 Server supports the following user credentials:
</p>

<ul>
    <li><strong>Username</strong>: {{ app.parameters.user_credentials[0] }}</li>
    <li><strong>Password</strong>: {{ app.parameters.user_credentials[1] }}</li>
</ul>

<p>Make the following cURL request to receive an access token:</p>

<pre><code>  $ curl -v "{{ app.parameters.token_route|slice(0, 4) == 'http' ? app.parameters.token_route : url(app.parameters.token_route) }}" \
    -d "grant_type=password&client_id={{app.parameters.client_id}}&client_secret={{app.parameters.client_secret}}&username={{app.parameters.user_credentials[0]}}&password={{ app.parameters.user_credentials[1] }}"
</code></pre>

<p>...or just click below to let us do it for you<p>

<a class="button" href="{{ url('request_token_with_usercredentials') }}?username={{app.parameters.user_credentials[0]}}&password={{ app.parameters.user_credentials[1] }}">Get Access Token</a>

<p>You can also emulate the request that sent invalid username/password combination bellow.<p>

<a class="button" href="{{ url('request_token_with_usercredentials') }}?username={{app.parameters.user_credentials[0]}}&password=wr0ngp4ssw0rd">Something will goes wrong</a>

